{"ast":null,"code":"import axios from 'axios';\nexport default {\n  name: 'RotatorWifi',\n  data() {\n    return {\n      networks: []\n    };\n  },\n  created() {/*this.startscan() */},\n  methods: {\n    prompt(network) {\n      if (network.open) {\n        this.$buefy.dialog.confirm({\n          message: `Подключиться к сети ${network.ssid}?`,\n          cancelText: 'Отмена',\n          confirmText: 'Подключиться',\n          type: 'is-info',\n          size: 'is-small',\n          onConfirm: () => {\n            const connection = {\n              ssid: network.ssid,\n              password: ''\n            };\n            this.saveNetwork(connection);\n          }\n        });\n      } else {\n        this.$buefy.dialog.prompt({\n          message: `Подключение к сети ${network.ssid} <br> Пароль:`,\n          type: 'is-info',\n          size: 'is-small',\n          confirmText: 'Подключиться',\n          cancelText: 'Отмена',\n          inputAttrs: {\n            placeholder: ''\n          },\n          trapFocus: true,\n          onConfirm: password => {\n            // this.$buefy.toast.open(`Вы подключены к сети: ${value}`);\n            const connection = {\n              ssid: network.ssid,\n              password: password\n            };\n            this.saveNetwork(connection);\n          }\n        });\n      }\n    },\n    saveNetwork(connection) {\n      // eslint-disable-next-line\n      console.log(connection);\n      axios.get(`api/connect?ssid=${connection.ssid}&password=${connection.password}`);\n      this.$buefy.toast.open('Ок');\n    },\n    startscan() {\n      axios.get('api/scanwifi').then(response => {\n        // eslint-disable-next-line\n        console.log(response.data);\n        return response.data;\n      }).then(data => {\n        this.networks = data.networks;\n      });\n    }\n  }\n};","map":null,"metadata":{},"sourceType":"module"}