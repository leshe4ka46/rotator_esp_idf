{"ast":null,"code":"export default {\n  name: 'RotatorMain',\n  data() {\n    return {\n      azimut: 0,\n      elevation: 0,\n      battery: 0,\n      ws: null\n    };\n  },\n  created() {\n    /*this.ws = new WebSocket(`ws://${window.location.hostname}/ws`) // `ws://localhost:2000/`\n    this.ws.onopen = function () {\n      // eslint-disable-next-line\n      console.log('WS подключен')\n    }\n    this.ws.onclose = function (eventclose) {\n      // eslint-disable-next-line\n      console.log('Cоеденение закрыто: ')\n      // eslint-disable-next-line\n      console.log(eventclose)\n    }\n    this.ws.onmessage = function (msg) {\n      var response = JSON.parse(msg.data)\n      this.battery = response.voltage.toFixed(2); this.azimut = response.azimut.toFixed(2); this.elevation = response.elevation.toFixed(2)\n    }.bind(this)\n    bus.$on('send_ws', (mess) => { this.ws.send(mess) })*/\n    setInterval(() => {\n      this.$ajax.get(`/api/v1/data/get/angles`).then(response => {\n        this.battery = response.data.voltage.toFixed(3);\n        this.azimut = response.data.azimut.toFixed(3);\n        this.elevation = response.data.elevation.toFixed(2);\n      });\n    }, 1000);\n  },\n  methods: {\n    zeroaxes\n  }\n};","map":{"version":3,"mappings":"AA6BA;EACAA;EACAC;IACA;MACAC;MACAC;MACAC;MACAC;IACA;EACA;EACAC;IACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;IACAC;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA;EACA;EAEAC;IACAC;EACA;AACA","names":["name","data","azimut","elevation","battery","ws","created","setInterval","methods","zeroaxes"],"sourceRoot":"src/components","sources":["RotatorMain.vue"],"sourcesContent":["<template>\n  <div class=\"container\">\n    <v-layout text-xs-center wrap>\n      <v-flex xs12 sm6 offset-sm3>\n        <v-card>\n          <v-card-title primary-title>\n            <div class=\"ma-auto\">\n              <h1><span class=\"black--text\">{{ azimut }}&deg;</span></h1>\n              <span class=\"grey--text\">Азимут</span>\n              <br>\n              <h1><span class=\"black--text\">{{ elevation }}&deg;</span></h1>\n              <span class=\"grey--text\">Элевация</span>\n              <br>\n              <h1><span class=\"black--text\">{{ battery }} B</span></h1>\n              <span class=\"grey--text\">Напряжение на батарее</span>\n              <br>\n              <v-btn depressed color=\"primary\" @click=\"zeroaxes\">\n                Primary\n              </v-btn>\n            </div>\n          </v-card-title>\n        </v-card>\n      </v-flex>\n    </v-layout>\n  </div>\n</template>\n\n<script>\n\nexport default {\n  name: 'RotatorMain',\n  data() {\n    return {\n      azimut: 0,\n      elevation: 0,\n      battery: 0,\n      ws: null\n    }\n  },\n  created() {\n    /*this.ws = new WebSocket(`ws://${window.location.hostname}/ws`) // `ws://localhost:2000/`\n    this.ws.onopen = function () {\n      // eslint-disable-next-line\n      console.log('WS подключен')\n    }\n    this.ws.onclose = function (eventclose) {\n      // eslint-disable-next-line\n      console.log('Cоеденение закрыто: ')\n      // eslint-disable-next-line\n      console.log(eventclose)\n    }\n    this.ws.onmessage = function (msg) {\n      var response = JSON.parse(msg.data)\n      this.battery = response.voltage.toFixed(2); this.azimut = response.azimut.toFixed(2); this.elevation = response.elevation.toFixed(2)\n    }.bind(this)\n    bus.$on('send_ws', (mess) => { this.ws.send(mess) })*/\n    setInterval(() => { this.$ajax.get(`/api/v1/data/get/angles`).then((response) => { this.battery = response.data.voltage.toFixed(3); this.azimut = response.data.azimut.toFixed(3); this.elevation = response.data.elevation.toFixed(2); }); }, 1000);\n  },\n\n  methods: {\n    zeroaxes\n  }\n}\n</script>\n"]},"metadata":{},"sourceType":"module"}