{"ast":null,"code":"import axios from 'axios';\nexport default {\n  name: 'RotatorWifi',\n  data() {\n    return {\n      networks: []\n    };\n  },\n  created() {/*this.startscan() */},\n  methods: {\n    prompt(network) {\n      if (network.open) {\n        this.$buefy.dialog.confirm({\n          message: `Подключиться к сети ${network.ssid}?`,\n          cancelText: 'Отмена',\n          confirmText: 'Подключиться',\n          type: 'is-info',\n          size: 'is-small',\n          onConfirm: () => {\n            const connection = {\n              ssid: network.ssid,\n              password: ''\n            };\n            this.saveNetwork(connection);\n          }\n        });\n      } else {\n        this.$buefy.dialog.prompt({\n          message: `Подключение к сети ${network.ssid} <br> Пароль:`,\n          type: 'is-info',\n          size: 'is-small',\n          confirmText: 'Подключиться',\n          cancelText: 'Отмена',\n          inputAttrs: {\n            placeholder: ''\n          },\n          trapFocus: true,\n          onConfirm: password => {\n            // this.$buefy.toast.open(`Вы подключены к сети: ${value}`);\n            const connection = {\n              ssid: network.ssid,\n              password: password\n            };\n            this.saveNetwork(connection);\n          }\n        });\n      }\n    },\n    saveNetwork(connection) {\n      // eslint-disable-next-line\n      console.log(connection);\n      axios.get(`api/connect?ssid=${connection.ssid}&password=${connection.password}`);\n      this.$buefy.toast.open('Ок');\n    },\n    startscan() {\n      axios.get('api/scanwifi').then(response => {\n        // eslint-disable-next-line\n        console.log(response.data);\n        return response.data;\n      }).then(data => {\n        this.networks = data.networks;\n      });\n    }\n  }\n};","map":{"version":3,"mappings":"AAwBA;AACA;EACAA;EACAC;IACA;MACAC;IACA;EACA;EACAC;EACAC;IACAC;MACA;QACA;UACAC;UACAC;UACAC;UACAC;UACAC;UACAC;YACA;cAAAC;cAAAC;YAAA;YACA;UACA;QACA;MACA;QACA;UACAP;UACAG;UACAC;UACAF;UACAD;UACAO;YACAC;UACA;UACAC;UACAL;YACA;YACA;cAAAC;cAAAC;YAAA;YACA;UACA;QACA;MACA;IACA;IACAI;MACA;MACAC;MACAC;MACA;IACA;IACAC;MACAD;QACA;QACAD;QACA;MACA;QACA;MACA;IACA;EACA;AACA","names":["name","data","networks","created","methods","prompt","message","cancelText","confirmText","type","size","onConfirm","ssid","password","inputAttrs","placeholder","trapFocus","saveNetwork","console","axios","startscan"],"sourceRoot":"src/components","sources":["RotatorWifi.vue"],"sourcesContent":["<template>\n  <!--<div>\n    <b-button type=\"is-info\" @click=\"startscan\">Scan</b-button>\n    <nav class=\"panel is-info\">\n\n<p class=\"panel-heading is-size-6\" v-show=\"networks.length == 0\">\n      Выполняется сканирование WI-FI сетей\n    </p>\n      <p class=\"panel-heading is-size-6\" v-show=\"networks.length > 0\">\n        Доступные сети\n      </p>\n      <a class=\"panel-block is-active\" v-for=\"network in networks\" :key=\"network.ssid\" @click=\"prompt(network)\">\n        <span class=\"panel-icon\">\n          <i class=\"fas fa-book\" aria-hidden=\"true\"></i>\n        </span>\n        {{ network.ssid }}\n      </a>\n    </nav>\n  </div>-->\n  beta\n</template>\n\n<script>\n\nimport axios from 'axios'\nexport default {\n  name: 'RotatorWifi',\n  data () {\n    return {\n      networks: []\n    }\n  },\n  created () { /*this.startscan() */},\n  methods: {\n    prompt (network) {\n      if (network.open) {\n        this.$buefy.dialog.confirm({\n          message: `Подключиться к сети ${network.ssid}?`,\n          cancelText: 'Отмена',\n          confirmText: 'Подключиться',\n          type: 'is-info',\n          size: 'is-small',\n          onConfirm: () => {\n            const connection = { ssid: network.ssid, password: '' }\n            this.saveNetwork(connection)\n          }\n        })\n      } else {\n        this.$buefy.dialog.prompt({\n          message: `Подключение к сети ${network.ssid} <br> Пароль:`,\n          type: 'is-info',\n          size: 'is-small',\n          confirmText: 'Подключиться',\n          cancelText: 'Отмена',\n          inputAttrs: {\n            placeholder: ''\n          },\n          trapFocus: true,\n          onConfirm: (password) => {\n            // this.$buefy.toast.open(`Вы подключены к сети: ${value}`);\n            const connection = { ssid: network.ssid, password: password }\n            this.saveNetwork(connection)\n          }\n        })\n      }\n    },\n    saveNetwork (connection) {\n      // eslint-disable-next-line\n      console.log(connection);\n      axios.get(`api/connect?ssid=${connection.ssid}&password=${connection.password}`)\n      this.$buefy.toast.open('Ок')\n    },\n    startscan () {\n      axios.get('api/scanwifi').then((response) => {\n        // eslint-disable-next-line\n        console.log(response.data)\n        return response.data\n      }).then((data) => {\n        this.networks = data.networks\n      })\n    }\n  }\n}\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped>\n</style>\n"]},"metadata":{},"sourceType":"module"}