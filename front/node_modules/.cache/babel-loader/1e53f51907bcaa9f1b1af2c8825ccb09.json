{"ast":null,"code":"import RotatorAuth from './components/auth.vue';\nimport RotatorSettings from './components/settings.vue';\nimport { bus } from '@/event-bus';\nimport { mdiMenu, mdiHome, mdiChartBoxOutline, mdiWrenchCog, mdiLoginVariant, mdiLampsOutline } from '@mdi/js';\nexport default {\n  name: 'app',\n  data() {\n    return {\n      mdiWrenchCog,\n      mdiLoginVariant,\n      mdiMenu,\n      mdiHome,\n      mdiChartBoxOutline,\n      mdiLampsOutline,\n      dialog: false,\n      login_dialog: false,\n      drawer: false,\n      settings_dialog: false,\n      mode: true,\n      isLoading: true,\n      is_admin: false\n    };\n  },\n  created() {\n    if (localStorage.getItem('rotator_client_id') == null || localStorage.getItem('rotator_client_id').length > 8) {\n      try {\n        var key = this.makeid(8);\n        var xmlHttp = new XMLHttpRequest();\n        xmlHttp.open('GET', 'api/adduser?key=' + key, false);\n        xmlHttp.send(null);\n        if (xmlHttp.responseText === 'OK') {\n          localStorage.setItem('rotator_client_id', key);\n        }\n      } catch (e) {\n        // eslint-disable-next-line\n        console.log(e);\n      }\n    }\n    bus.$on('is_admin', val => {\n      this.is_admin = val;\n    });\n    bus.$on('close_dialogs', () => {\n      this.login_dialog = false;\n      this.settings_dialog = false;\n    });\n  },\n  mounted() {\n    setTimeout(() => {\n      this.isLoading = false;\n    }, 100);\n  },\n  components: {\n    RotatorAuth,\n    RotatorSettings /* RotatorSettings, RotatorMain */\n  },\n\n  methods: {\n    makeid(length) {\n      var result = '';\n      var characters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789';\n      var charactersLength = characters.length;\n      for (var i = 0; i < length; i++) {\n        result += characters.charAt(Math.floor(Math.random() * charactersLength));\n      }\n      return result;\n    }\n  }\n};","map":null,"metadata":{},"sourceType":"module"}