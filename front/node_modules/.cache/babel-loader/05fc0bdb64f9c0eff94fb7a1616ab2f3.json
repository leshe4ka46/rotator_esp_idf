{"ast":null,"code":"import RotatorAuth from './components/RotatorAuth.vue';\nimport RotatorSettings from './components/settings.vue';\nimport { bus } from '@/event-bus';\nimport { mdiMenu, mdiHome, mdiChartBoxOutline, mdiWrenchCog, mdiLoginVariant, mdiLampsOutline } from '@mdi/js';\nexport default {\n  name: 'app',\n  data() {\n    return {\n      list_item: 0,\n      mdiWrenchCog,\n      mdiLoginVariant,\n      mdiMenu,\n      mdiHome,\n      mdiChartBoxOutline,\n      mdiLampsOutline,\n      dialog: false,\n      login_dialog: false,\n      drawer: false,\n      settings_dialog: false,\n      mode: true,\n      isLoading: true,\n      is_admin: false\n    };\n  },\n  created() {\n    if (localStorage.getItem('rotator_client_id') == null || localStorage.getItem('rotator_client_id').length > 8) {\n      try {\n        var key = this.makeid(8);\n        this.$ajax.post('/api/v1/users/add', {\n          key: this.makeid(8)\n        }).then(function (data) {\n          // eslint-disable-next-line\n          console.log(data);\n          if (data.data === 'OK') {\n            localStorage.setItem('rotator_client_id', key);\n          }\n        }).catch(error => {\n          // eslint-disable-next-line\n          console.log(error);\n        });\n      } catch (e) {\n        // eslint-disable-next-line\n        console.log(e);\n      }\n    }\n    bus.$on('is_admin', val => {\n      this.is_admin = val;\n    });\n    bus.$on('close_dialogs', () => {\n      this.login_dialog = false;\n      this.settings_dialog = false;\n    });\n  },\n  mounted() {\n    setTimeout(() => {\n      this.isLoading = false;\n    }, 100);\n  },\n  components: {\n    RotatorAuth,\n    RotatorSettings /* RotatorSettings, RotatorMain */\n  },\n\n  methods: {\n    makeid(length) {\n      var result = '';\n      var characters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789';\n      var charactersLength = characters.length;\n      for (var i = 0; i < length; i++) {\n        result += characters.charAt(Math.floor(Math.random() * charactersLength));\n      }\n      return result;\n    }\n  }\n};","map":{"version":3,"mappings":"AA8EA;AACA;AACA;AACA;AACA;EACAA;EACAC;IACA;MACAC;MACAC;MACAC;MACAC;MACAC;MACAC;MACAC;MACAC;MACAC;MACAC;MACAC;MACAC;MACAC;MACAC;IACA;EACA;EACAC;IACA;MACA;QACA;QACA,WACAC;UACAC;QACA,GACAC;UAAA;UACAC;UACA;YACAC;UACA;QACA,GACAC;UAAA;UACAF;QACA;MAEA;QACA;QACAA;MACA;IACA;IACAG;MACA;IACA;IACAA;MACA;MACA;IACA;EACA;EACAC;IACAC;MACA;IACA;EACA;EACAC;IACAC;IAAAC;EACA;;EACAC;IACAC;MACA;MACA;MACA;MACA;QACAC;MACA;MAAA;IACA;EAEA;AAEA","names":["name","data","list_item","mdiWrenchCog","mdiLoginVariant","mdiMenu","mdiHome","mdiChartBoxOutline","mdiLampsOutline","dialog","login_dialog","drawer","settings_dialog","mode","isLoading","is_admin","created","post","key","then","console","localStorage","catch","bus","mounted","setTimeout","components","RotatorAuth","RotatorSettings","methods","makeid","result"],"sourceRoot":"src","sources":["App.vue"],"sourcesContent":["<template>\n  <div>\n    <v-app id=\"inspire\">\n      <v-navigation-drawer v-model=\"drawer\" fixed app clipped>\n        <v-list dense v-model=\"list_item\">\n          <v-list-tile to=\"/\">\n            <v-list-tile-action>\n              <MdiSvg>{{mdiHome}}</MdiSvg>\n            </v-list-tile-action>\n            <v-list-tile-content>\n              <v-list-tile-title>Home</v-list-tile-title>\n            </v-list-tile-content>\n          </v-list-tile>\n\n          <v-list-tile to=\"/data\" v-if=\"is_admin==true\">\n            <v-list-tile-action>\n              <MdiSvg>{{mdiChartBoxOutline}}</MdiSvg>\n            </v-list-tile-action>\n            <v-list-tile-content>\n              <v-list-tile-title>Data</v-list-tile-title>\n            </v-list-tile-content>\n          </v-list-tile>\n          <v-list-tile to=\"/light\" v-if=\"is_admin==true\">\n            <v-list-tile-action>\n              <MdiSvg>{{mdiLampsOutline}}</MdiSvg>\n            </v-list-tile-action>\n            <v-list-tile-content>\n              <v-list-tile-title>Light</v-list-tile-title>\n            </v-list-tile-content>\n          </v-list-tile>\n\n        </v-list>\n      </v-navigation-drawer>\n      <v-toolbar color=\"#1aa9c9\" dark fixed app clipped-left>\n        <v-toolbar-side-icon @click.stop=\"drawer = !drawer\">\n          <MdiSvg>{{mdiMenu}}</MdiSvg>\n        </v-toolbar-side-icon>\n        <v-toolbar-title>ESP Rotator</v-toolbar-title>\n        <v-spacer></v-spacer>\n        <v-btn icon v-if=\"is_admin==0\">\n          <div @click.stop=\"login_dialog = true\">\n            <MdiSvg>{{ mdiLoginVariant }}</MdiSvg>\n          </div>\n        </v-btn>\n        <v-btn icon v-if=\"is_admin==1\">\n          <div @click=\"settings_dialog = true\">\n            <MdiSvg >{{ mdiWrenchCog }}</MdiSvg>\n          </div>\n        </v-btn>\n\n      </v-toolbar>\n\n      <v-dialog v-model=\"settings_dialog\" max-width=\"85%\">\n        <v-card>\n          <v-card-title style=\"font-size: 1.2em;\">\n              Настройки\n          </v-card-title>\n\n          <RotatorSettings style=\"font-size: 1.2em;\"></RotatorSettings>\n\n        </v-card>\n      </v-dialog>\n      <v-dialog v-model=\"login_dialog\" width=\"800\">\n        <v-card>\n          <RotatorAuth style=\"font-size: 1.5em;\"></RotatorAuth>\n        </v-card>\n      </v-dialog>\n      <v-content>\n        <v-container fluid fill-height>\n          <router-view style=\"font-size: 1.2em;\"></router-view>\n       </v-container>\n      </v-content>\n\n    </v-app>\n  </div>\n</template>\n\n<script>\nimport RotatorAuth from './components/RotatorAuth.vue'\nimport RotatorSettings from './components/settings.vue'\nimport { bus } from '@/event-bus'\nimport { mdiMenu, mdiHome, mdiChartBoxOutline, mdiWrenchCog, mdiLoginVariant,mdiLampsOutline  } from '@mdi/js'\nexport default {\n  name: 'app',\n  data () {\n    return {\n      list_item:0,\n      mdiWrenchCog,\n      mdiLoginVariant,\n      mdiMenu,\n      mdiHome,\n      mdiChartBoxOutline,\n      mdiLampsOutline,\n      dialog: false,\n      login_dialog: false,\n      drawer: false,\n      settings_dialog: false,\n      mode: true,\n      isLoading: true,\n      is_admin: false\n    }\n  },\n  created () {\n    if (localStorage.getItem('rotator_client_id') == null || localStorage.getItem('rotator_client_id').length > 8) {\n      try {\n        var key = this.makeid(8)\n        this.$ajax\n        .post('/api/v1/users/add', {\n          key: this.makeid(8)\n        })\n        .then(function(data){ // eslint-disable-next-line\n          console.log(data);\n          if (data.data === 'OK') {\n          localStorage.setItem('rotator_client_id', key)\n        }\n        })\n        .catch(error => { // eslint-disable-next-line\n          console.log(error);\n        })\n\n      } catch (e) {\n        // eslint-disable-next-line\n        console.log(e)\n      }\n    }\n    bus.$on('is_admin', (val) => {\n      this.is_admin = val\n    })\n    bus.$on('close_dialogs', () => {\n      this.login_dialog = false\n      this.settings_dialog = false\n    })\n  },\n  mounted () {\n    setTimeout(() => {\n      this.isLoading = false\n    }, 100)\n  },\n  components: {\n    RotatorAuth, RotatorSettings/* RotatorSettings, RotatorMain */\n  },\n  methods: {\n    makeid (length) {\n      var result = ''\n      var characters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789'\n      var charactersLength = characters.length\n      for (var i = 0; i < length; i++) {\n        result += characters.charAt(Math.floor(Math.random() * charactersLength))\n      } return result\n    }\n\n  }\n\n}\n</script>\n"]},"metadata":{},"sourceType":"module"}