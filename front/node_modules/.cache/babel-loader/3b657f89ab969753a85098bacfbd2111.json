{"ast":null,"code":"import { bus } from '@/event-bus';\nexport default {\n  name: 'RotatorMain',\n  data() {\n    return {\n      azimut: 0,\n      elevation: 0,\n      battery: 0,\n      ws: null,\n      prev_azimut: 0,\n      setted_azimut: 0,\n      prev_elevation: 0,\n      setted_elevation: 0,\n      alert_axes: false,\n      alerting_done: false,\n      alert_times: 0\n    };\n  },\n  created() {\n    /*bus.$on('return_data_angles', (data) => {\n      this.setted_azimut = data.azimut\n      this.setted_elevation = data.elevation\n    })*/\n    /*this.ws = new WebSocket(`ws://${window.location.hostname}/ws`) // `ws://localhost:2000/`\n    this.ws.onopen = function () {\n      // eslint-disable-next-line\n      console.log('WS подключен')\n    }\n    this.ws.onclose = function (eventclose) {\n      // eslint-disable-next-line\n      console.log('Cоеденение закрыто: ')\n      // eslint-disable-next-line\n      console.log(eventclose)\n    }\n    this.ws.onmessage = function (msg) {\n      var response = JSON.parse(msg.data)\n      this.battery = response.voltage.toFixed(2); this.azimut = response.azimut.toFixed(2); this.elevation = response.elevation.toFixed(2)\n    }.bind(this)\n    bus.$on('send_ws', (mess) => { this.ws.send(mess) })*/\n    setInterval(() => {\n      this.$ajax.get(`/api/v1/data/get/angles`).then(response => {\n        this.battery = response.data.voltage.toFixed(2);\n        this.azimut = response.data.azimut.toFixed(3);\n        this.elevation = response.data.elevation.toFixed(2);\n        this.setted_azimut = response.data.setted_azimut;\n        this.setted_elevation = response.data.setted_elevation;\n      });\n    }, 1000);\n    setInterval(() => {\n      this.check_angles();\n    }, 1000);\n  },\n  methods: {\n    zeroaxes() {\n      this.$ajax.post('/api/v1/data/set/nullX', {\n        key: localStorage.getItem('rotator_client_id')\n      });\n    },\n    check_angles() {\n      bus.$emit('get_data_angles');\n      if (Math.abs(this.prev_azimut - this.azimut) < 1) {\n        if (Math.abs(this.azimut - this.setted_azimut) > 2) {\n          if ( /*this.alerting_done == false && */this.alert_times != 0) {\n            this.alert_axes = true;\n          }\n          this.alert_times += 1;\n        } else {\n          this.alert_times = 0;\n          this.alerting_done = false;\n          this.alert_axes = false;\n        }\n      }\n      this.prev_azimut = this.azimut;\n    }\n  }\n};","map":null,"metadata":{},"sourceType":"module"}