{"ast":null,"code":"var render = function render() {\n  var _vm = this,\n    _c = _vm._self._c;\n  return _c('div', [_c('b-button', {\n    attrs: {\n      \"type\": \"is-info\"\n    },\n    on: {\n      \"click\": _vm.startscan\n    }\n  }, [_vm._v(\"Scan\")]), _c('nav', {\n    staticClass: \"panel is-info\"\n  }, [_c('p', {\n    directives: [{\n      name: \"show\",\n      rawName: \"v-show\",\n      value: _vm.networks.length == 0,\n      expression: \"networks.length == 0\"\n    }],\n    staticClass: \"panel-heading is-size-6\"\n  }, [_vm._v(\" Выполняется сканирование WI-FI сетей \")]), _c('p', {\n    directives: [{\n      name: \"show\",\n      rawName: \"v-show\",\n      value: _vm.networks.length > 0,\n      expression: \"networks.length > 0\"\n    }],\n    staticClass: \"panel-heading is-size-6\"\n  }, [_vm._v(\" Доступные сети \")]), _vm._l(_vm.networks, function (network) {\n    return _c('a', {\n      key: network.ssid,\n      staticClass: \"panel-block is-active\",\n      on: {\n        \"click\": function ($event) {\n          return _vm.prompt(network);\n        }\n      }\n    }, [_vm._m(0, true), _vm._v(\" \" + _vm._s(network.ssid) + \" \")]);\n  })], 2)], 1);\n};\nvar staticRenderFns = [function () {\n  var _vm = this,\n    _c = _vm._self._c;\n  return _c('span', {\n    staticClass: \"panel-icon\"\n  }, [_c('i', {\n    staticClass: \"fas fa-book\",\n    attrs: {\n      \"aria-hidden\": \"true\"\n    }\n  })]);\n}];\nexport { render, staticRenderFns };","map":null,"metadata":{},"sourceType":"module"}